
cd $WORKSPACE
source admin-openrc.sh
source .venv/bin/activate

image_name='ubuntu-bionic'
image_file='./ubuntu-bionic.img'
image_url='http://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img'
if ! output=`openstack image show $image_name 2>/dev/null` ; then
  if [[ ! -f $image_file ]]; then
    wget -nv -O $image_file $image_url
  fi
  if ! output=`openstack image create --public --file $image_file $image_name` ; then
    return 1
  fi
fi


openstack keypair delete mk
openstack keypair create --public-key ~/.ssh/id_rsa.pub mk

openstack flavor create --disk 10 --vcpus 2 --ram 512 --id 1 m1
openstack flavor create --disk 30 --vcpus 2 --ram 1024 --id 2 m2
openstack flavor create --disk 30 --vcpus 4 --ram 4096 --id 3 m3
openstack flavor create --disk 30 --vcpus 4 --ram 3072 --id 4 m4

openstack server create --flavor 1 --nic net-id=demo-net --image ubuntu-bionic --key-name mk jclient
openstack server create --flavor 2 --nic net-id=demo-net --image ubuntu-bionic --key-name mk jcont
openstack server create --flavor 3 --nic net-id=demo-net --image ubuntu-bionic --key-name mk jmaster
openstack server create --flavor 4 --nic net-id=demo-net --image ubuntu-bionic --key-name mk jworker
# hosts file
openstack server list -c Networks -c Name -f value | sed -e 's/demo-net=//g' | awk '{ print $2 "   " $1 }'

openstack server delete jclient
openstack server delete jcont
openstack server delete jmaster
openstack server delete jworker


ssh root@10.30.10.148

ssh ubuntu@169.254.0.3
sudo bash -c "cat >>/etc/hosts"
192.168.1.6   jworker
192.168.1.5   jmaster
192.168.1.4   jcont
192.168.1.3   jclient





on compute for each VM:
#!/bin/bash -ex
mch=$1
port=`echo $mch | sed -e 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)/\2\4/'`
ssh -R $port:127.0.0.1:22 -N ubuntu@$mch &
[ -f sshuttle_0.78.3-1_all.deb ] || wget http://mirrors.kernel.org/ubuntu/pool/universe/s/sshuttle/sshuttle_0.78.3-1_all.deb
scp ./sshuttle_0.78.3-1_all.deb ubuntu@$mch:sshuttle.deb
ssh ubuntu@$mch sudo dpkg -i sshuttle.deb
scp ~/.ssh/id_rsa ubuntu@$mch:.ssh/id_rsa
ssh ubuntu@$mch chmod 0600 .ssh/id_rsa
ssh ubuntu@$mch "echo 'Host *' > .ssh/config"
ssh ubuntu@$mch "echo '    StrictHostKeyChecking no' >> .ssh/config"
ssh ubuntu@$mch "echo '    UserKnownHostsFile=/dev/null' >> .ssh/config"
ssh ubuntu@$mch "nohup sshuttle -D --dns -r root@localhost:2544 0/0 -x 192.168.0.0/16 -x 10.64.0.0/12 -x 10.96.0.0/12 -x 169.254.0.0/16 -x 10.10.10.5/32 &"

ssh ubuntu@169.254.0.3 sudo bash -c "cat >>/etc/hosts"

then on jclient:
juju bootstrap manual/ubuntu@jcont cont
juju add-machine ssh:ubuntu@jmaster && juju add-machine ssh:ubuntu@jworker

juju deploy --map-machines=existing,0=0,5=1 ./bundle.yaml