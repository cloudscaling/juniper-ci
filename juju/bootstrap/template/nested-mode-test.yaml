series: xenial
services:

# contrail-kubernetes

  contrail-kubernetes-master:
    charm: ../contrail-kubernetes-master
    series: xenial
    options:
      image-tag: 'master-latest'
      nested_mode: true
      cluster_project: "{'domain':'default-domain','project':'$OS_PROJECT_NAME'}"
      cluster_network: "{'domain':'default-domain','project':'$OS_PROJECT_NAME','name':'$networkname'}"
      service_subnets: '10.96.0.0/12'
      docker-registry: 'opencontrailnightly'
      nested_mode_config: |
        {
        "CONTROLLER_NODES": "$CONTROLLER_NODES",
        "AUTH_MODE": "keystone",
        "KEYSTONE_AUTH_ADMIN_TENANT": "$OS_PROJECT_NAME",
        "KEYSTONE_AUTH_ADMIN_USER": "$OS_USERNAME",
        "KEYSTONE_AUTH_ADMIN_PASSWORD": "$OS_PASSWORD",
        "KEYSTONE_AUTH_URL_VERSION": "/v2.0",
        "KEYSTONE_AUTH_HOST": "$OS_KEYSTONE_IP",
        "KEYSTONE_AUTH_PROTO": "http",
        "KEYSTONE_AUTH_PUBLIC_PORT":"$OS_KEYSTONE_PORT",
        "KEYSTONE_AUTH_REGION_NAME": "RegionOne",
        "KEYSTONE_AUTH_INSECURE": "True",
        "KUBERNESTES_NESTED_VROUTER_VIP": "10.10.10.5"
        }

  contrail-kubernetes-node:
    charm: ../contrail-kubernetes-node
    series: xenial
    options:
      docker-registry: 'opencontrailnightly'
      image-tag: 'master-latest'


# kubernetes

  easyrsa:
    charm: cs:~containers/easyrsa
    num_units: 1
    resources:
      easyrsa: 5
    to:
    - '1'

  etcd:
    charm: cs:~containers/etcd
    num_units: 1
    options:
      channel: 3.2/stable
    resources:
      etcd: 3
      snapshot: 0
    to:
    - '0'

  kubernetes-master:
    charm: cs:~containers/kubernetes-master-696
    expose: true
    num_units: 1
    options:
      channel: 1.14/stable
      service-cidr: '10.96.0.0/12'
      enable-dashboard-addons: false
      enable-metrics: false
      dns-provider: 'none'
      docker_runtime: 'custom'
      docker_runtime_repo: 'deb [arch={ARCH}] https://download.docker.com/linux/ubuntu {CODE} stable'
      docker_runtime_key_url: 'https://download.docker.com/linux/ubuntu/gpg'
      docker_runtime_package: 'docker-ce'
    resources:
      cdk-addons: 0
      kube-apiserver: 0
      kube-controller-manager: 0
      kube-proxy: 0
      kube-scheduler: 0
      kubectl: 0
    to:
    - '0'

  kubernetes-worker:
    charm: cs:~containers/kubernetes-worker-550
    expose: true
    num_units: 1
    options:
      channel: 1.14/stable
      ingress: false
      docker_runtime: 'custom'
      docker_runtime_repo: 'deb [arch={ARCH}] https://download.docker.com/linux/ubuntu {CODE} stable'
      docker_runtime_key_url: 'https://download.docker.com/linux/ubuntu/gpg'
      docker_runtime_package: 'docker-ce'
    resources:
      cni-amd64: 154
      cni-arm64: 146
      cni-s390x: 152
      kube-proxy: 0
      kubectl: 0
      kubelet: 0
    to:
    - '0'

# misc

  ntp:
    charm: cs:xenial/ntp

relations:

# contrail-kubernetes

- - contrail-kubernetes-node:cni
  - kubernetes-master:cni
- - contrail-kubernetes-node:cni
  - kubernetes-worker:cni
- - contrail-kubernetes-master:kube-api-endpoint
  - kubernetes-master:kube-api-endpoint
- - contrail-kubernetes-master:contrail-kubernetes-config
  - contrail-kubernetes-node:contrail-kubernetes-config

# kubernetes

- - kubernetes-master:kube-api-endpoint
  - kubernetes-worker:kube-api-endpoint
- - kubernetes-master:kube-control
  - kubernetes-worker:kube-control
- - kubernetes-master:certificates
  - easyrsa:client
- - kubernetes-master:etcd
  - etcd:db
- - kubernetes-worker:certificates
  - easyrsa:client
- - etcd:certificates
  - easyrsa:client

machines:
  "0":
    series: xenial
    constraints: mem=4G cores=1 root-disk=10G
  "1":
    series: xenial
    constraints: mem=1G cores=1 root-disk=10G
