# Deployment of Kubernetes and Contrail in Amazon environment.
# 3 node configuration â€“ Contrail components, Kubernetes master and one Kubernetes worker

series: ${SERIES}

machines:

  # kubernetes pods
  "0":
    series: ${SERIES}
    constraints: mem=8G cores=2 root-disk=32G

  # kubernetes master
  "1":
    series: ${SERIES}
    constraints: mem=8G cores=2 root-disk=32G
  "5":
    series: ${SERIES}
    constraints: mem=8G cores=2 root-disk=32G
  "6":
    series: ${SERIES}
    constraints: mem=8G cores=2 root-disk=32G

  # contrail components
  "2":
    series: ${SERIES}
    constraints: mem=16G cores=4 root-disk=32G
  "3":
    series: ${SERIES}
    constraints: mem=16G cores=4 root-disk=32G
  "4":
    series: ${SERIES}
    constraints: mem=16G cores=4 root-disk=32G

services:

  # kubernetes

  easyrsa:
    series: ${SERIES}
    charm: cs:~containers/easyrsa
    num_units: 1
    to:
    - lxd:1

  etcd:
    series: ${SERIES}
    charm: cs:~containers/etcd
    num_units: 3
    options:
      channel: 3.2/stable
    to:
    - '1'
    - '5'
    - '6'

  kubeapi-load-balancer:
    charm: cs:~containers/kubeapi-load-balancer-647
    expose: true
    num_units: 3
    resources: {}
    to:
    - '1'
    - '5'
    - '6'

  kubernetes-master:
    series: ${SERIES}
    charm: cs:~containers/kubernetes-master-696
    expose: true
    num_units: 3
    options:
      channel: '1.14/stable'
      service-cidr: '10.96.0.0/12'
      docker_runtime: 'custom'
      docker_runtime_repo: 'deb [arch={ARCH}] https://download.docker.com/linux/ubuntu {CODE} stable'
      docker_runtime_key_url: 'https://download.docker.com/linux/ubuntu/gpg'
      docker_runtime_package: 'docker-ce'
    to:
    - '1'
    - '5'
    - '6'

  kubernetes-worker:
    series: ${SERIES}
    charm: cs:~containers/kubernetes-worker-550
    num_units: 1
    options:
      channel: '1.14/stable'
      docker_runtime: 'custom'
      docker_runtime_repo: 'deb [arch={ARCH}] https://download.docker.com/linux/ubuntu {CODE} stable'
      docker_runtime_key_url: 'https://download.docker.com/linux/ubuntu/gpg'
      docker_runtime_package: 'docker-ce'
    to:
    - '0'

  # contrail-kubernetes

  contrail-kubernetes-master:
    series: ${SERIES}
    charm: ${JUJU_REPO}/contrail-kubernetes-master
    options:
      log-level: 'SYS_DEBUG'
      service_subnets: '10.96.0.0/12'
      docker-registry: "${CONTAINER_REGISTRY}"
      image-tag: "${CONTRAIL_VERSION}"

  contrail-kubernetes-node:
    series: ${SERIES}
    charm: ${JUJU_REPO}/contrail-kubernetes-node
    options:
      log-level: 'SYS_DEBUG'
      docker-registry: "${CONTAINER_REGISTRY}"
      image-tag: "${CONTRAIL_VERSION}"

  # contrail

  contrail-agent:
    series: ${SERIES}
    charm: ${JUJU_REPO}/contrail-agent
    options:
      log-level: 'SYS_DEBUG'
      docker-registry: "${CONTAINER_REGISTRY}"
      image-tag: "${CONTRAIL_VERSION}"

  contrail-analytics:
    series: ${SERIES}
    charm: ${JUJU_REPO}/contrail-analytics
    expose: true
    num_units: 3
    options:
      log-level: 'SYS_DEBUG'
      docker-registry: "${CONTAINER_REGISTRY}"
      image-tag: "${CONTRAIL_VERSION}"
    to:
      - "2"
      - "3"
      - "4"

  contrail-analyticsdb:
    series: ${SERIES}
    charm: ${JUJU_REPO}/contrail-analyticsdb
    num_units: 3
    options:
      cassandra-minimum-diskgb: '4'
      cassandra-jvm-extra-opts: '-Xms1g -Xmx2g'
      log-level: 'SYS_DEBUG'
      docker-registry: "${CONTAINER_REGISTRY}"
      image-tag: "${CONTRAIL_VERSION}"
    to:
      - "2"
      - "3"
      - "4"

  contrail-controller:
    series: ${SERIES}
    charm: ${JUJU_REPO}/contrail-controller
    expose: true
    num_units: 3
    options:
      auth-mode: 'no-auth'
      cassandra-minimum-diskgb: '4'
      cassandra-jvm-extra-opts: '-Xms1g -Xmx2g'
      log-level: 'SYS_DEBUG'
      docker-registry: "${CONTAINER_REGISTRY}"
      image-tag: "${CONTRAIL_VERSION}"
      #vip: '172.30.30.30'
      #haproxy-https-mode: 'http'
      #haproxy-http-mode: 'https'
    to:
      - "2"
      - "3"
      - "4"

  # misc

  ntp:
    charm: cs:${SERIES}/ntp

relations:

- - kubernetes-master
  - ntp
- - kubernetes-worker
  - ntp
- - contrail-controller
  - ntp

# kubernetes

- - kubernetes-master:kube-api-endpoint
  - kubernetes-worker:kube-api-endpoint
- - kubernetes-master:kube-control
  - kubernetes-worker:kube-control
- - kubernetes-master:certificates
  - easyrsa:client
- - kubernetes-master:etcd
  - etcd:db
- - kubernetes-worker:certificates
  - easyrsa:client
- - etcd:certificates
  - easyrsa:client

- - kubernetes-master:kube-api-endpoint
  - kubeapi-load-balancer:apiserver
- - kubernetes-master:loadbalancer
  - kubeapi-load-balancer:loadbalancer
- - kubernetes-worker:kube-api-endpoint
  - kubeapi-load-balancer:website
- - kubeapi-load-balancer:certificates
  - easyrsa:client

# contrail

- - contrail-controller
  - contrail-analytics
- - contrail-controller
  - contrail-analyticsdb
- - contrail-analytics
  - contrail-analyticsdb
- - contrail-agent
  - contrail-controller

# contrail-kubernetes

- - contrail-kubernetes-node:cni
  - kubernetes-master:cni
- - contrail-kubernetes-node:cni
  - kubernetes-worker:cni
- - contrail-kubernetes-master:contrail-controller
  - contrail-controller:contrail-controller
- - contrail-kubernetes-master:kube-api-endpoint
  - kubernetes-master:kube-api-endpoint
- - contrail-agent:juju-info
  - kubernetes-worker:juju-info
- - contrail-kubernetes-master:contrail-kubernetes-config
  - contrail-kubernetes-node:contrail-kubernetes-config
