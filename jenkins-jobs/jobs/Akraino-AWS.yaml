- job:
    name: Akraino-AWS
    description: "Deploys Akraino Regional Controller and Treasuremap node in AWS and initiate airship+TF deployment."
    defaults: global
    parameters:
      - node:
          name: SLAVE_NAME
          description: "Select slave: one for specific node or multiple for any node."
          default-slaves:
            - slave01
            - slave04
          allowed-slaves:
            - slave01
            - slave04
          ignore-offline-nodes: false
          allowed-multiselect: false
      - choice:
          name: CLEAN_BEFORE
          choices:
            - 'true'
            - 'false'
      - choice:
          name: CLEAN_AWS_AFTER
          choices:
            - 'true'
            - 'false'
      - string:
          name: CI_BRANCH
          default: 'master'
    scm:
      - juniper-ci
    builders:
      - shell: |
          #!/bin/bash -e
          if [[ "$CI_BRANCH" != "master" ]]; then
            cd juniper-ci
            git checkout "$CI_BRANCH"
            cd ..
          fi
      - shell: |
          #!/bin/bash -e
          if [[ $CLEAN_BEFORE == 'true' ]] ; then
            rm -rf logs/*
          fi
      - shell: |
          #!/bin/bash -e

          echo "DESCRIPTION juniper_ci/branch==$CI_BRANCH CLEAN_BEFORE=$CLEAN_BEFORE CLEAN_AWS_AFTER=$CLEAN_AWS_AFTER"
          function aws_cleanup {
            if [[ $CLEAN_AWS_AFTER == 'true' ]] ; then
               ansible-playbook -i inventory/akraino akraino-playbook-cleanup.yaml
            fi   
          }

          trap aws_cleanup EXIT

          cd ./juniper-ci/ansible
          echo =============== Deploying EC2 hosts ==================
          ansible-playbook akraino-playbook-step01.yaml
          echo =============== File inventory/akraino was updated ===============
          cat inventory/akraino
          echo =============== File vars/akraino.yaml was updated ===============
          cat vars/akraino.yaml
          echo =============== Deploying akraino RC and start POD deployment ================
          ansible-playbook -i inventory/akraino akraino-playbook-step02.yaml
          echo =============== Deploying logs to LF Nexus log server ===================

          #Compressing logs
          for f in logs/*.log; do zip -9 $f.zip $f; done

          NEXUS_URL=https://nexus.akraino.org
          SILO=juniper
          JENKINS_HOSTNAME=jenkins.progmaticlab.com
          BUILD_URL="${JENKINS_HOSTNAME}/job/${JOB_NAME}/${BUILD_NUMBER}/"
          NEXUS_PATH="${SILO}/job/${JOB_NAME}/${BUILD_NUMBER}"

          
          lftools --debug deploy logs $NEXUS_URL $NEXUS_PATH $BUILD_URL
          lftools --debug deploy nexus-zip $NEXUS_URL logs $NEXUS_PATH logs/*.zip

          echo =============== Logs uploaded to $NEXUS_URL/content/sites/logs/$NEXUS_PATH ==============

      - description-setter:
          regexp: "DESCRIPTION (.*)"

    publishers:
      - archive:
          artifacts: 'logs/**'
          allow-empty: true

